tipify(el = actionButton("btn", "On hover"), title = "daavs"),
tipify(actionButton("btn2", "On click"),
"Hello again! This is a click-able pop-up", placement="bottom", trigger = "click")
)
server <- function(input, output, session) {
addTooltip(session=session,id="btn",title="Hello! This is a hover pop-up. You'll have to click to see the next one.")
}
shinyApp(ui, server)
library(shiny)
library(shinyBS)
ui <- fluidPage(
titlePanel("ShinyBS tooltips"),
tipify(el = actionButton("btn", "On hover"), title = "daavs"),
tipify(actionButton("btn2", "On click"),
"Hello again! This is a click-able pop-up", placement="bottom", trigger = "click")
)
server <- function(input, output, session) {
#addTooltip(session=session,id="btn",title="Hello! This is a hover pop-up. You'll have to click to see the next one.")
}
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
df_new <- data.frame()
n = 10
df_new[, names(data)] <- matrix(NA, nrow = n, ncol = length(names(data)))
length(names(data))
matrix(NA, nrow = n, ncol = length(names(data)))
names(data)
df_new[, 1:7] <- matrix(NA, nrow = n, ncol = length(names(data)))
mat <- matrix(NA, nrow = n, ncol = length(names(data)))
df_new <- data.frame(matrix(NA, nrow = n, ncol = length(names(data))))
df_new
var <- names(data)
names(df_new)
names(df_new) <- var
df_new
tail(data)
max(data$Date)
seq.Date(from = max(data$Date), length.out = 10)
seq.Date(from = max(data$Date), by = 1, length.out = 10)
df_new$Date <- seq.Date(from = max(data$Date), by = 1, length.out = 10)
data <- rbind(data, df_new)
data
data <- data()
n_data <- nrow(data)
react_var2$price_today <- data$Close[n_data]
react_var2$data <- data
react_var2$date <- input$date_stock
react_var2$stock <- input$select_stock
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
pred_lower
length(pred_lower)
pred_upper
tail(pred_data)
tail(pred_data, 25)
nrow(pred_lower)
length(pred_lower)
nrow(data)
nrow(subdata)
react_var2$n_added_dates
n_na
60 + 132
nrow(data)
n_na <- nrow(data) - react_var2$n_added_dates
n_na <- nrow(data) - nrow(subdata)
n_na
nrow(data)
nrow(data) - 10
test <- data
test[test$Date <= "2020-04-24", ]
nrow(test[test$Date <= "2020-04-24", ])
data[180:190, ]
max(data$Date) + 1
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
StartDate <- as.Date("2010-01-01")
EndDate <- as.Date("2010-12-31")
myDays <- seq(StartDate , EndDate, by = "day")
excludeDays <- c("Saturday", "Sunday")
myWeekDays <- subset(myDays, !weekdays(myDays) %in% excludeDays)
firstMonday <- which(weekdays(head(myWeekDays, 5)) == "Monday")
lastFriday <- length(myWeekDays) - 5 +
which(weekdays(tail(myWeekDays, 5)) == "Friday")
myCompleteWeeks <- myWeekDays[firstMonday:lastFriday]
myCompleteWeeks
lastFriday
myDays
excludeDays
myWeekDays
weekdays(myDays)
StartDate <- as.Date("2010-01-01")
EndDate <- as.Date("2010-12-31")
myDays <- seq(StartDate , EndDate, by = "day")
excludeDays <- c("lørdag", "søndag")
myWeekDays <- subset(myDays, !weekdays(myDays) %in% excludeDays)
firstMonday <- which(weekdays(head(myWeekDays, 5)) == "Monday")
lastFriday <- length(myWeekDays) - 5 +
which(weekdays(tail(myWeekDays, 5)) == "Friday")
myCompleteWeeks <- myWeekDays[firstMonday:lastFriday]
StartDate <- as.Date("2010-01-01")
EndDate <- as.Date("2010-12-31")
myDays <- seq(StartDate , EndDate, by = "day")
excludeDays <- c("lørdag", "søndag")
myWeekDays <- subset(myDays, !weekdays(myDays) %in% excludeDays)
excludeDays
myWeekDays <- subset(myDays, !weekdays(myDays) %in% excludeDays)
myWeekDays
dates <- seq.Date(from = "2020-04-25", by = 1, length.out = 10)
dates <- seq.Date(from = as.Date("2020-04-25"), by = 1, length.out = 10)
dates
excludeDays <- c("lørdag", "søndag")
dates[dates %in% weekdays(dates)]
weekdays(dates)
dates[!weekdays(dates) %in% excludeDays]
f_seqDate <- function(from, by, length.out, excludeDays = c("lørdag", "søndag")) {
dates <- seq.Date(from, by, length.out)
dates[!weekdays(dates) %in% excludeDays]
}
f_seqDate <- function(from, by = 1, length.out, excludeDays = c("lørdag", "søndag")) {
dates <- seq.Date(from, by, length.out)
dates[!weekdays(dates) %in% excludeDays]
}
f_seqDate <- function(from, by = 1, length.out = 10, excludeDays = c("lørdag", "søndag")) {
dates <- seq.Date(from, by, length.out)
dates[!weekdays(dates) %in% excludeDays]
}
f_seqDate(from = as.Date("2020-04-20"), by = 1, length.out = 10)
from = as.Date("2020-04-20")
by = 1
length.out = 10
excludeDays = c("lørdag", "søndag")
dates <- seq.Date(from, by, length.out)
dates <- seq.Date(from = from, by = by, length.out = length.out)
dates[!weekdays(dates) %in% excludeDays]
f_seqDate <- function(from, by = 1, length.out = 10, excludeDays = c("lørdag", "søndag")) {
dates <- seq.Date(from = from, by = by, length.out = length.out)
dates[!weekdays(dates) %in% excludeDays]
}
f_add_dates <- function(data, from, by, length.out) {
var <- names(data)
df_new <- data.frame(matrix(NA, nrow = n, ncol = length(var)))
names(df_new) <- var
df_new$Date <- f_seqDate(from, by, length.out)
data <- rbind(data, df_new)
return(data)
}
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
n <- 10000
df <- data.frame(x = 1:n,
y = sample(x = 1:n, size = n, replace = TRUE),
z = rnorm(n, 0, 1),
w = rpois(n, lambda = 25))
head(df)
df <- data.frame(x = 1:n,
y = sample(x = 1:5, size = n, replace = TRUE),
z = rnorm(n, 0, 1),
w = rpois(n, lambda = 25))
df
table(df$y)
names(table(df$y))
names(table(df$y)[1:3])
names(table(df$x)[1:3])
table(df$x)
table(df$y)
order(table(df$y))
order(table(df$y), decreasing = TRUE)
order(table(df$y), decreasing = TRUE)[1:3]
order(table(df$w), decreasing = TRUE)[1:3]
order(table(df$x), decreasing = TRUE)[1:3]
order(table(df$x), decreasing = TRUE)[1:3]
order(table(df$y), decreasing = TRUE)[1:3]
order(table(df$z), decreasing = TRUE)[1:3]
order(table(df$w), decreasing = TRUE)[1:3]
order(table(df$w), decreasing = TRUE)[1:3]
table(df$y)
tab <- table(df$y)
order(tab, decreasing = TRUE)[1:3]
top3 <- order(tab, decreasing = TRUE)[1:3]
top3
top3
tab[top3]
as.numeric(tab[top3])
counts <- as.numeric(tab[top3])
data.frame(top3, counts)
order(table(df$x), decreasing = TRUE)[1:3]
df <- data.frame(x = 1:n,
y = sample(x = 1:5, size = n, replace = TRUE),
z = rnorm(n, 0, 1),
w = rpois(n, lambda = 25))
df <- data.frame(x = 1:n,
y = sample(x = 1:5, size = n, replace = TRUE),
z = rnorm(n, 0, 1),
w = rpois(n, lambda = 25))
df
df <- data.frame(x = 1:n,
y = sample(x = c(NA, 1:5), size = n, replace = TRUE),
z = rnorm(n, 0, 1),
w = rpois(n, lambda = 25))
df$x[is.na(df$y)]
df$x[is.na(df$y)] <- NA
set.seed(1014)
df <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
names(df) <- letters[1:6]
df$a[df$a == -99] <- NA
df$b[df$b == -99] <- NA
df$c[df$c == -98] <- NA
df$d[df$d == -99] <- NA
df$e[df$e == -99] <- NA
df$f[df$g == -99] <- NA
df <- data.frame(x = 1:n,
y = sample(x = c(NA, 1:5), size = n, replace = TRUE),
z = rnorm(n, 0, 1),
w = rpois(n, lambda = 25))
f_replace <- function(x, fix_value, replace_value) {
x[x == fix_value] <- replace_value
}
df <- data.frame(x = 1:n,
y = sample(x = c(NA, 1:5), size = n, replace = TRUE),
z = rnorm(n, 0, 1),
w = rpois(n, lambda = 25))
df <- data.frame(x = 1:n,
y = sample(x = c(-1, 1:5), size = n, replace = TRUE),
z = rnorm(n, 0, 1),
w = rpois(n, lambda = 25))
n <- 10000
df <- data.frame(x = 1:n,
y = sample(x = c(-1, 1:5), size = n, replace = TRUE),
z = rnorm(n, 0, 1),
w = rpois(n, lambda = 25))
order(table(df$x), decreasing = TRUE)[1:3]
tab <- table(df$y)
top3 <- order(tab, decreasing = TRUE)[1:3]
counts <- as.numeric(tab[top3])
data.frame(top3, counts)
order(table(df$x), decreasing = TRUE)[1:2]
tab <- table(df$y)
top2 <- order(tab, decreasing = TRUE)[1:2]
value <- as.numeric(tab[top2])
values <- as.numeric(tab[top2])
values
values <- paste(tab[top2], collapse = "and")
values
values <- paste(tab[top2], collapse = " and ")
values
data.frame(top2, values)
tab <- table(df$y)
top2 <- order(tab, decreasing = TRUE)[1:2]
top2
tab[top2]
data.frame("variable" = "x", top2)
data.frame("variable" = "x", values)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
setwd("./")
getwd()
readRDS(file = "./data/all data.Rda")
data_file <- "data/allexchanges2020.csv"
read.csv(data_file, stringsAsFactors = FALSE)
readRDS(file = "data/all data.Rda")
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
library(ehlib)
str_between("det er @variable 2", "@", " ")
str_between("det er $@variable 2", "@", " ")
str_between("det er $variable 2", "$", " ")
str_between("det er [variable 2", "[", " ")
str_between("det er [variable 2", "\[", " ")
str_between("det er [variable 2", "[", " ")
str_between("det er [variable 2", "", " ")
str_between("det er [variable 2", "[", " ")
str_between("det er data$x der bruges", "$", " ")
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
library(rsconnect)
setwd("C:/Users/Kristian/Aktier/Risk-Ratio")
deployApp()
