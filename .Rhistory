add_lines(x = ~new_id, y = ~p_lower)
plot_ly(plot_data, x = ~new_id, y = ~Close, type = "scatter", mode = "lines",
name = "stock") %>%
add_lines(x = ~new_id, y = ~p_lower) %>%
add_lines(x = ~new_id, y = ~p_upper)
plot_ly(plot_data, x = ~new_id, y = ~Close, type = "scatter", mode = "lines",
name = "stock", text = ) %>%
add_lines(x = ~new_id, y = ~p_lower, name = "lower") %>%
add_lines(x = ~new_id, y = ~p_upper, name = "upper")
plot_data$hover_stock <- paste0("(", plot_data$Date, ",", plot_data$Close, ")")
plot_ly(plot_data, x = ~new_id, y = ~Close, type = "scatter", mode = "lines",
name = "stock", text = ~hover_stock)
plot_data$hover_stock <- paste0("(", plot_data$Date, ", ", plot_data$Close, ")")
plot_ly(plot_data, x = ~new_id, y = ~Close, type = "scatter", mode = "lines",
name = "stock", text = ~hover_stock)
plot_data$hover_stock <- paste0("(", plot_data$Date, ", ", plot_data$Close, ")")
plot_data$hover_lower <- paste0("(", plot_data$Date, ", ", plot_data$p_lower, ")")
plot_data$hover_upper <- paste0("(", plot_data$Date, ", ", plot_data$p_upper, ")")
plot_ly(plot_data, x = ~new_id, y = ~Close, type = "scatter", mode = "lines",
name = "stock", text = ~hover_stock) %>%
add_lines(x = ~new_id, y = ~p_lower, name = "lower", text = ~hover_lower) %>%
add_lines(x = ~new_id, y = ~p_upper, name = "upper", text = ~hover_upper)
plot_data$p_lower <- round(predict(m_lower), 2)
plot_data$p_upper <- round(predict(m_upper), 2)
plot_data$hover_stock <- paste0("(", plot_data$Date, ", ", plot_data$Close, ")")
plot_data$hover_lower <- paste0("(", plot_data$Date, ", ", plot_data$p_lower, ")")
plot_data$hover_upper <- paste0("(", plot_data$Date, ", ", plot_data$p_upper, ")")
plot_ly(plot_data, x = ~new_id, y = ~Close, type = "scatter", mode = "lines",
name = "stock", text = ~hover_stock) %>%
add_lines(x = ~new_id, y = ~p_lower, name = "lower", text = ~hover_lower) %>%
add_lines(x = ~new_id, y = ~p_upper, name = "upper", text = ~hover_upper)
plot_ly(plot_data, x = ~new_id, y = ~Close, type = "scatter", mode = "lines",
name = "stock", text = ~Date)
plot_data$p_lower <- round(predict(m_lower), 2)
plot_data$p_upper <- round(predict(m_upper), 2)
plot_ly(plot_data, x = ~new_id, y = ~Close, type = "scatter", mode = "lines",
name = "stock", text = ~Date) %>%
add_lines(x = ~new_id, y = ~p_lower, name = "lower", text = ~Date) %>%
add_lines(x = ~new_id, y = ~p_upper, name = "upper", text = ~Date)
plot_ly(plot_data, x = ~new_id, y = ~Low, type = "scatter", mode = "lines",
name = "stock", text = ~Date) %>%
add_lines(x = ~new_id, y = ~p_lower, name = "lower", text = ~Date) %>%
add_lines(x = ~new_id, y = ~p_upper, name = "upper", text = ~Date)
plot_ly(plot_data, x = ~new_id, y = ~Close, type = "scatter", mode = "lines",
name = "stock", text = ~Date) %>%
add_lines(x = ~new_id, y = ~p_lower, name = "lower", text = ~Date) %>%
add_lines(x = ~new_id, y = ~p_upper, name = "upper", text = ~Date)
plot_ly(data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F))) %>%
add_lines(x = ~new_id, y = ~p_lower, name = "lower", text = ~Date) %>%
add_lines(x = ~new_id, y = ~p_upper, name = "upper", text = ~Date)
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F))) %>%
add_lines(x = ~new_id, y = ~p_lower, name = "lower", text = ~Date) %>%
add_lines(x = ~new_id, y = ~p_upper, name = "upper", text = ~Date)
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F))) %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date)
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F))) %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE)
plot_ly(plot_data, x = ~new_id, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F))) %>%
add_lines(x = ~new_id, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~new_id, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE)
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F))) %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE)
plot_ly(plot_data, x = as.numeric(~Date), type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F))) %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE)
plot_ly(plot_data, x = ~as.numeric(Date), type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F))) %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE)
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F))) %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE)
str(plot_data)
m_lower <- lm(Low ~ Date, data = plot_data)
summary(m_lower)
library(plotly)
library(quantmod)
getSymbols("AAPL",src='yahoo')
df <- data.frame(Date=index(AAPL),coredata(AAPL))
df <- tail(df, 365)
fig <- df %>% plot_ly(x = ~Date, type="candlestick",
open = ~AAPL.Open, close = ~AAPL.Close,
high = ~AAPL.High, low = ~AAPL.Low)
fig <- fig %>% add_lines(x = ~Date, y = ~AAPL.Open, line = list(color = 'black', width = 0.75), inherit = F)
fig <- fig %>% layout(showlegend = FALSE)
fig
head(Date)
head(df)
fig <- df %>% plot_ly(x = ~Date, type="candlestick",
open = ~AAPL.Open, close = ~AAPL.Close,
high = ~AAPL.High, low = ~AAPL.Low)
fig <- fig %>% add_lines(x = ~Date, y = ~AAPL.Open, line = list(color = 'black', width = 0.75), inherit = F)
fig <- fig %>% layout(showlegend = FALSE,
xaxis = list(rangeslider = list(visible = F)))
fig
df$pred <- rep(250, nrow(df))
fig %>%
add_lines(x = ~Date, y = ~pred, inherit = F)
fig %>%
add_lines(x = ~Date, y = ~pred, inherit = F)
head(df)
head(df)
df <- data.frame(Date=index(AAPL),coredata(AAPL))
df <- tail(df, 365)
fig <- df %>% plot_ly(x = ~Date, type="candlestick",
open = ~AAPL.Open, close = ~AAPL.Close,
high = ~AAPL.High, low = ~AAPL.Low)
fig <- fig %>% add_lines(x = ~Date, y = ~AAPL.Open, line = list(color = 'black', width = 0.75), inherit = F)
fig <- fig %>% layout(showlegend = FALSE,
xaxis = list(rangeslider = list(visible = F)))
df$pred <- rep(250, nrow(df))
fig %>%
add_lines(x = ~Date, y = ~pred, inherit = F)
fig %>%
add_lines(x = ~Date, y = ~pred, inherit = F)
fig
head(df)
plot_ly(data = df, x = ~Date, type="candlestick",
open = ~AAPL.Open, close = ~AAPL.Close,
high = ~AAPL.High, low = ~AAPL.Low) %>%
add_lines(x = ~Date, y = ~AAPL.Open, inherit = F) %>%
layout(showlegend = FALSE,
xaxis = list(rangeslider = list(visible = F)))
head(df)
plot_ly(data = df, x = ~Date, type="candlestick",
open = ~AAPL.Open, close = ~AAPL.Close,
high = ~AAPL.High, low = ~AAPL.Low) %>%
add_lines(x = ~Date, y = ~pred, inherit = F) %>%
layout(showlegend = FALSE,
xaxis = list(rangeslider = list(visible = F)))
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F)))
plot_data$p <- rep(1000, nrow(plot_data))
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE) %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F)))
plot_ly(data = df, x = ~Date, type="candlestick",
open = ~AAPL.Open, close = ~AAPL.Close,
high = ~AAPL.High, low = ~AAPL.Low) %>%
add_lines(x = ~Date, y = ~pred, inherit = F) %>%
layout(showlegend = FALSE,
xaxis = list(rangeslider = list(visible = F)))
df$pred <- seq(from = 150, to = 300, length.out = nrow(df))
plot_ly(data = df, x = ~Date, type="candlestick",
open = ~AAPL.Open, close = ~AAPL.Close,
high = ~AAPL.High, low = ~AAPL.Low) %>%
add_lines(x = ~Date, y = ~pred, inherit = F) %>%
layout(showlegend = FALSE,
xaxis = list(rangeslider = list(visible = F)))
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE) %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F)))
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE) %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F)))
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE) %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F)))
library(quantmod)
ticker <- "ORSTED.CO"
data <- getSymbols(Symbols = ticker, auto.assign = FALSE, src = "yahoo", from = "2020-01-01")
head(data)
index(data)
data$Date <- index(data)
head(data)
names(data)
names(data) <- c("Open", "High", "Low", "Close", "Volume", "Adjusted")
head(data)
rownames(data) <- c()
head(data)
data <- getSymbols(Symbols = ticker, auto.assign = FALSE, src = "yahoo", from = "2020-01-01")
data$Date <- index(data)
head(data)
index(data)
head(data)
data <- getSymbols(Symbols = ticker, auto.assign = FALSE, src = "yahoo", from = "2020-01-01")
data$Date <- index(data)
data <- getSymbols(Symbols = ticker, auto.assign = FALSE, src = "yahoo", from = "2020-01-01")
data <- data.frame(data)
head(data)
rownames(data)
data$Date <- as.Date(rownames(data))
head(data)
names(data) <- c("Open", "High", "Low", "Close", "Volume", "Adjusted", "Date")
head(data)
rownames(data) <- c()
head(data)
start <- "2020-01-01"
plot_data <- data[data$Date >= start, ]
plot_data$new_id <- 1:nrow(plot_data)
m_lower <- lm(Low ~ Date, data = plot_data)
m_upper <- lm(High ~ new_id, data = plot_data)
summary(m_lower)
summary(m_upper)
plot_data$p_lower <- round(predict(m_lower), 2)
plot_data$p_upper <- round(predict(m_upper), 2)
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE) %>%
layout(title = "C25",
xaxis = list(rangeslider = list(visible = F)))
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE) %>%
layout(title = "Instrument of interest",
xaxis = list(rangeslider = list(visible = F)))
library(plotly)
library(quantmod)
#source("C:/Users/Kristian/Aktier/Analyse/Bear og bull market definition/loading investing com data.R")
ticker <- "ORSTED.CO"
data <- getSymbols(Symbols = ticker, auto.assign = FALSE, src = "yahoo", from = "2020-01-01")
data <- data.frame(data)
data$Date <- as.Date(rownames(data))
names(data) <- c("Open", "High", "Low", "Close", "Volume", "Adjusted", "Date")
head(data)
rownames(data) <- c()
start <- "2020-03-16"
plot_data <- data[data$Date >= start, ]
plot_data$new_id <- 1:nrow(plot_data)
m_lower <- lm(Low ~ Date, data = plot_data)
m_upper <- lm(High ~ new_id, data = plot_data)
summary(m_lower)
summary(m_upper)
plot_data$p_lower <- round(predict(m_lower), 2)
plot_data$p_upper <- round(predict(m_upper), 2)
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE) %>%
layout(title = "Instrument of interest",
xaxis = list(rangeslider = list(visible = F)))
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE) %>%
layout(title = "Instrument of interest",
yaxis = list(title = "Stock price")
xaxis = list(rangeslider = list(visible = F)))
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE) %>%
layout(title = "Instrument of interest",
yaxis = list(title = "Stock price"),
xaxis = list(rangeslider = list(visible = F)))
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", text = ~Date, inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", text = ~Date, inherit = FALSE) %>%
layout(title = "Ørsted",
yaxis = list(title = "Stock price"),
xaxis = list(rangeslider = list(visible = F)))
plot_ly(plot_data, x = ~Date, type = "candlestick",
open = ~Open, close = ~Close,
high = ~High, low = ~Low, name = "candlestick") %>%
add_lines(x = ~Date, y = ~p_lower, name = "lower", inherit = FALSE) %>%
add_lines(x = ~Date, y = ~p_upper, name = "upper", inherit = FALSE) %>%
layout(title = "Ørsted",
yaxis = list(title = "Stock price"),
xaxis = list(rangeslider = list(visible = F)))
source("C:/Users/Kristian/Aktier/Analyse/Candlestick pattern/load yahoo data.R")
######################################
## Risk ratio app
######################################
setwd("C:/Users/Kristian/Aktier/Risk-Ratio")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
source("../packages.R")
source("./packages.R")
file.path("packages.R")
file.path("./packages.R")
file.path(".//packages.R")
file.path("../packages.R")
getwd()
getwd("./")
setwd("./")
getwd()
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
library(rsconnect)
setwd("C:/Users/Kristian/Aktier/Risk-Ratio")
deployApp()
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
symbols <- read.csv("/data/symbols.csv", header = TRUE)
setwd("./")
symbols <- read.csv("/data/symbols.csv", header = TRUE)
getwd()
paste0(getwd(), "/data")
dir.exists(paste0(getwd(), "/data"))
file.exists(paste0(getwd(), "/data/symbols.csv"))
symbols <- read.csv("./data/symbols.csv", header = TRUE)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
symbols <- read.csv("./data/symbols.csv", header = TRUE)
symbols[["combi"]]
symbols
symbols <- read.csv("./data/symbols.csv", header = TRUE, sep = "|")
symbols[["combi"]]
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
source("server/stock functions.R")
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
data
######################################
## Risk ratio app
######################################
setwd("./")
source("functions/packages.R")
source("ui/ui.R")
source("server/server.R")
shinyApp(ui, server)
data
library(quantmod)
getSymbols(ticker,
auto.assign = FALSE,
from = input$date_stock,
src = 'yahoo')
input$date_stock
ticker
getSymbols(as.character(ticker),
auto.assign = FALSE,
from = input$date_stock,
src = 'yahoo')
