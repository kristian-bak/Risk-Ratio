s <- sd(x)
end <- x[today]
if (today == 1) {
first <- length(x)
} else {
first <- 1
}
start <- x[first]
r <- (end - start) / start
RR <- round(r / s, digits)
return(RR)
}
data[1, "Price"]
f_risk_ratio <- function(data, digits) {
s <- sd(data[["num_change"]])
end <- data[1, "Price"]
start <- data[nrow(data), "Price"]
r <- (end - start) / start
RR <- round(r / s, digits)
return(RR)
}
f_risk_ratio(data, digits = 2)
f_risk_ratio(data, digits = 20)
f_risk_ratio(data, digits = 4)
data
data$ï..Date
data$ï..Date[1]
as.Date(data$ï..Date[1], format = "%d-%m-%y")
as.Date(data$ï..Date[1], format = "%dd-%mm-%y")
as.Date(data$ï..Date[1], format = "%dd-%mm-%yy")
as.Date(data$ï..Date[1], format = "%dd-%mm-%yyyy")
as.Date(data$ï..Date[1], format = "%m %dd, %yyyy")
as.Date(data$ï..Date[1], format = "%m %dd %yyyy")
as.Date(data$ï..Date[1], format = "%m-%dd-%yyyy")
as.Date(data$ï..Date[1], format = "%m-%dd-%yy")
as.Date(data$ï..Date[1], format = "%mmm-%dd-%yy")
data$ï..Date[1]
as.Date(data$ï..Date[1], format = "%B %d %y")
as.Date(data$ï..Date[1], format = "%B %dd %y")
as.Date(data$ï..Date[1], format = "%B %dd, %y")
as.Date(data$ï..Date[1], format = "%B %dd, %yyyy")
as.Date(data$ï..Date[1], format = "%b %dd, %yyyy")
as.Date(data$ï..Date[1], format = "%b %d %y")
as.Date(data$ï..Date[1], format = "%dd-%%mm-%yyyy")
as.Date(data$ï..Date[1], format = "%d-%m-%y")
as.Date(data$ï..Date[1], format = "%dd-%mm-%yyyy")
as.Date("01-Jan-2017", "%d-%b-%Y")
data$ï..Date[1]
library(anytime)
install.packages("anytime")
library(anytime)
anydate(data$ï..Date[1])
str(anydate(data$ï..Date[1]))
data$Date <- anydate(data$ï..Date)
head(data)
data$change <- as.numeric(gsub("%", "", data$Change..))
data$Change <- as.numeric(gsub("%", "", data$Change..))
data[, c("Date", "Open", "Low", "Price", "High", "Change")]
data[1:5, c("Date", "Open", "Low", "Price", "High", "Change")]
data[, c("Date", "Open", "Low", "Price", "High", "Change")]
library(anytime)
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%", "", data$Change..))
data$Date <- anydate(data$ï..Date)
data data[, c("Date", "Open", "Low", "Price", "High", "Change")]
data <-  data[, c("Date", "Open", "Low", "Price", "High", "Change")]
head(data)
library(data.table)
data <- data.table(data)
setorderv(data, Date)
setorderv(data, "Date")
data
f_risk_ratio <- function(data, digits) {
s <- sd(data[["Change"]])
start <- data[1, "Price"]
end <- data[nrow(data), "Price"]
r <- (end - start) / start
RR <- round(r / s, digits)
return(RR)
}
f_risk_ratio(data, digits = 4)
f_risk_ratio <- function(data, digits) {
s <- sd(data[["Change"]])
start <- data[["Price"]][1]
end <- data[["Price"]][nrow(data)]
r <- (end - start) / start
RR <- round(r / s, digits)
return(RR)
}
f_risk_ratio(data, digits = 4)
x <- seq(from = -1, to = 1, by = 0.05)
x <- seq(from = -1, to = 1, by = 0.05)
(2.55 - x) / 12.95
y - (2.55 - x) / 12.95
y <- (2.55 - x) / 12.95
y
z <- 0.23
y - z
which.min(abs(y - z))
x[12]
x <- seq(from = -1, to = 1, by = 0.05)
y <- (3.83 - x) / 10.92
z <- 0.38
which.min(abs(y - z))
x[15]
f_risk_ratio <- function(data, digits) {
s <- sd(data[["Change"]])
start <- data[["Price"]][1]
end <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
return(RR)
}
f_data <- function(file) {
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%", "", data$Change..))
data$Date <- anydate(data$ï..Date)
data <- data[, c("Date", "Open", "Low", "Price", "High", "Change")]
data <- data.table(data)
setorderv(data, "Date")
return(data)
}
data <- f_data(file)
file
library(anytime)
library(data.table)
path <- "C:/Users/Kristian/Aktier/Analyse/Risiko pr investeringstype/Data/Investing com"
files <- list.files(path, full.names = TRUE)
file <- files[23]
f_data <- function(file) {
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%", "", data$Change..))
data$Date <- anydate(data$ï..Date)
data <- data[, c("Date", "Open", "Low", "Price", "High", "Change")]
data <- data.table(data)
setorderv(data, "Date")
return(data)
}
data <- f_data(file)
f_risk_ratio <- function(data, digits) {
s <- sd(data[["Change"]])
start <- data[["Price"]][1]
end <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
return(RR)
}
f_risk_ratio <- function(data, digits = 4) {
s <- sd(data[["Change"]])
start <- data[["Price"]][1]
end <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
return(RR)
}
f_risk_ratio(data)
file
f_data <- function(file) {
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%", "", data$Change..))
data$Date <- anydate(data$ï..Date)
data <- data[, c("Date", "Open", "Low", "Price", "High", "Change")]
data <- data.table(data)
return(data)
}
data <- f_data(file)
f_risk_ratio <- function(data, digits = 4) {
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
return(RR)
}
f_risk_ratio(data)
min(data$Date)
## udvid så den kan regne risk ratio baseret på 1, 3 og 5 år
difftime(min(data$Date), max(data$Date))
## udvid så den kan regne risk ratio baseret på 1, 3 og 5 år
difftime(max(data$Date), min(data$Date))
files <- list.files(path, full.names = TRUE)
files
file <- files[27]
file
data <- f_data(file)
## udvid så den kan regne risk ratio baseret på 1, 3 og 5 år
difftime(max(data$Date), min(data$Date))
max(data$Date)
df_risk <- data.frame(Examples = c("Cash",
"Saving account",
"2-3y mortgage bonds",
"6-9y goverment/mortgage bonds",
"Bonds investment fond, 50-50 stock-bond fond, gold, emerging markets bonds",
"Dow Jones, Value stocks",
"C25, Blend/growth stocks",
"Krypto valuta, crowdlending"),
Risk = 0:7,
Yield = c(0, 0.2, 0.5, 3, 5, 8, 12, 14),
stringsAsFactors = FALSE)
df_risk
library(anytime)
library(data.table)
path <- "C:/Users/Kristian/Aktier/Analyse/Risiko pr investeringstype/Data/Investing com"
files <- list.files(path, full.names = TRUE)
file <- files[27]
f_data <- function(file) {
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%", "", data$Change..))
data$Date <- anydate(data$ï..Date)
data <- data[, c("Date", "Open", "Low", "Price", "High", "Change")]
data <- data.table(data)
return(data)
}
data <- f_data(file)
f_risk_ratio <- function(data, digits = 4) {
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
df <- data.frame("SD" = s, "Return" = r, "RR" = RR)
return(RR)
}
f_risk_ratio(data)
f_risk_ratio <- function(data, digits = 4) {
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
df <- data.frame("SD" = s, "Return" = r, "RR" = RR)
return(df)
}
f_risk_ratio(data)
f_risk_ratio <- function(data, digits = 4) {
start_time <- min(data[["Date"]])
end_time <- max(data[["Date"]])
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
df <- data.frame("SD" = s, "Return" = r, "RR" = RR)
return(df)
}
f_risk_ratio(data)
f_risk_ratio <- function(data, digits = 4) {
start_time <- min(data[["Date"]])
end_time <- max(data[["Date"]])
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
df <- data.frame("T1" = start_time, "T2" = end_time, "SD" = s, "Return" = r, "RR" = RR)
return(df)
}
f_risk_ratio(data)
file
library(anytime)
library(data.table)
path <- "C:/Users/Kristian/Aktier/Analyse/Risiko pr investeringstype/Data/Investing com"
files <- list.files(path, full.names = TRUE)
files
file <- files[1]
data <- f_data(file)
file
files
files <- list.files(path, full.names = TRUE)
files <- files[-1]
file <- files[1]
data <- f_data(file)
f_risk_ratio <- function(data, digits = 4) {
start_time <- min(data[["Date"]])
end_time <- max(data[["Date"]])
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
df <- data.frame("T1" = start_time, "T2" = end_time, "SD" = s, "Return" = r, "RR" = RR)
return(df)
}
f_risk_ratio(data)
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%", "", data$Change..))
head(data)
is.na(data$Change)
sum(is.na(data$Change))
which(is.na(data$Change))
data[11, ]
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%|,", "", data$Change..))
f_data <- function(file) {
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%|,", "", data$Change..))
data$Date <- anydate(data$ï..Date)
data <- data[, c("Date", "Open", "Low", "Price", "High", "Change")]
data <- data.table(data)
return(data)
}
data <- f_data(file)
f_risk_ratio <- function(data, digits = 4) {
start_time <- min(data[["Date"]])
end_time <- max(data[["Date"]])
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
df <- data.frame("T1" = start_time, "T2" = end_time, "SD" = s, "Return" = r, "RR" = RR)
return(df)
}
f_risk_ratio(data)
f_risk_ratio(data, digits = 5)
f_risk_ratio <- function(data, digits = 5) {
start_time <- min(data[["Date"]])
end_time <- max(data[["Date"]])
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
df <- data.frame("T1" = start_time, "T2" = end_time, "SD" = s, "Return" = r, "RR" = RR)
return(df)
}
f_risk_ratio(data)
file <- files[2]
f_data <- function(file) {
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%|,", "", data$Change..))
data$Date <- anydate(data$ï..Date)
data <- data[, c("Date", "Open", "Low", "Price", "High", "Change")]
data <- data.table(data)
return(data)
}
data <- f_data(file)
f_risk_ratio <- function(data, digits = 5) {
start_time <- min(data[["Date"]])
end_time <- max(data[["Date"]])
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
df <- data.frame("T1" = start_time, "T2" = end_time, "SD" = s, "Return" = r, "RR" = RR)
return(df)
}
f_risk_ratio(data)
file <- files[3]
data <- f_data(file)
f_risk_ratio(data)
f_data <- function(file) {
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%|,", "", data$Change..))
data$Date <- anydate(data$ï..Date)
data$Year <- substring(data$Date, 1, 4)
data$Month <- substring(data$Date, 6, 7)
data <- data[, c("Date", "Year", "Month", "Open", "Low", "Price", "High", "Change")]
data <- data.table(data)
return(data)
}
data <- f_data(file)
head(data)
split(data, data$Year)
data_list <- split(data, data$Year)
unique(data$Year)
sapply(data_list, f_risk_ratio)
f_risk_ratio <- function(data, digits = 5) {
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
rf <- -0.3
RR <- round((r - rf) / s, digits)
df <- data.frame("SD" = s, "Return" = r, "RR" = RR)
return(df)
}
sapply(data_list, f_risk_ratio)
f_risk_ratio <- function(data, rf = 0, digits = 5) {
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- (end - start) / start
RR <- round((r - rf) / s, digits)
df <- data.frame("SD" = s, "Return" = r, "RR" = RR)
return(df)
}
sapply(data_list, f_risk_ratio)
f_risk_ratio <- function(data, rf = 0, digits = 5) {
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- round((end - start) / start, digits)
RR <- round((r - rf) / s, digits)
df <- data.frame("SD" = s, "Return" = r, "RR" = RR)
return(df)
}
sapply(data_list, f_risk_ratio)
res <- sapply(data_list, f_risk_ratio)
res[1, ]
res
res[[1]]
res[1, ]
res <- lapply(data_list, f_risk_ratio)
res
unlist(res)
do.call("rbind", res)
f_risk_year <- function(data) {
data_list <- split(data, data$Year)
res <- lapply(data_list, f_risk_ratio)
res <- do.call("rbind", res)
return(res)
}
f_risk_year(data)
path <- "C:/Users/Kristian/Aktier/Analyse/Risiko pr investeringstype/Data/Investing com"
files <- list.files(path, full.names = TRUE)
files <- files[-1]
file <- files[4]
file
file <- files[5]
files
file <- files[1]
file
data <- f_data(file)
f_risk_ratio(data)
s <- sd(data[["Change"]])
s
end <- data[["Price"]][1]
end
f_data <- function(file) {
data <- read.csv(file, header = TRUE, stringsAsFactors = FALSE)
data$Change <- as.numeric(gsub("%|,", "", data$Change..))
data$Price <- as.numeric(gsub(",", "", data$Price))
data$Date <- anydate(data$ï..Date)
data$Year <- substring(data$Date, 1, 4)
data$Month <- substring(data$Date, 6, 7)
data <- data[, c("Date", "Year", "Month", "Open", "Low", "Price", "High", "Change")]
data <- data.table(data)
return(data)
}
data <- f_data(file)
f_risk_ratio <- function(data, rf = 0, digits = 5) {
s <- sd(data[["Change"]])
end <- data[["Price"]][1]
start <- data[["Price"]][nrow(data)]
r <- round((end - start) / start, digits)
RR <- round((r - rf) / s, digits)
df <- data.frame("SD" = s, "Return" = r, "RR" = RR)
return(df)
}
f_risk_ratio(data)
f_risk_year <- function(data) {
data_list <- split(data, data$Year)
res <- lapply(data_list, f_risk_ratio)
res <- do.call("rbind", res)
return(res)
}
f_risk_year(data)
setwd("C:/Users/Kristian/Programmering/R/Risk ratio")
######################################
## Risk ratio app
######################################
source("packages.R")
source("ui.R")
source("server.R")
shinyApp(ui, server)
library(rsconnect)
setwd("C:/Users/Kristian/Programmering/R/Risk ratio")
deployApp()
######################################
## Risk ratio app
######################################
source("packages.R")
source("ui.R")
source("server.R")
shinyApp(ui, server)
deployApp()
######################################
## Risk ratio app
######################################
source("packages.R")
source("ui.R")
source("server.R")
shinyApp(ui, server)
######################################
## Risk ratio app
######################################
source("packages.R")
source("ui.R")
source("server.R")
shinyApp(ui, server)
deployApp()
######################################
## Risk ratio app
######################################
source("packages.R")
source("ui.R")
source("server.R")
shinyApp(ui, server)
